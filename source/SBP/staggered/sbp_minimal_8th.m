function [xp,xm,Pp,Pm,Qp,Qm] = ...
         sbp_staggered_8th(n,h,r,x)
%  [spectral_radius,Pp,Pm,Ppi,Pmi,Qp,Qm,Dp,Dm,x,y] = sbp_staggered_8th(n,h,x) 
test = false;



if nargin < 4
  % Optimized for spectral radius
  if r == 0
    x = 1.0e+02 * [
  -0.001359593530419;
   0.010276886827526;
   0.001102605419454;
  -0.001939125154051;
  -0.009859650525557;
   0.011366112097866;];
  elseif r == 1
    x = 1.0e+02 * [
  -0.008145912929104;
   0.001900805429304;
  -0.000230979553583;
  -0.000261388846397;
  -0.011125586559154;
   0.011673983721645;];
  else     
    x(1) = -0.871704272135538;
    x(2) =  0.631220330582030;
    x(3) =  0.128968969836879;
    x(4) = -0.161283761028262;
    x(5) = -0.966290495826278;
    x(6) =  1.126623836204457;
  end
  q43 = x(1);
  q57 = x(2);
  q68 = x(3); 
  q76 = x(4);
  q77 = x(5);
  q78 = x(6);
else
  q43 = x(1);
  q57 = x(2);
  q68 = x(3); 
  q76 = x(4);
  q77 = x(5);
  q78 = x(6);
end

% Coefficients determined such that the SBP property is satisfied
% free parameters:  q43, q57, q68, q76, q77, q78
q11 = -16*q43/525 - 32*q57/105 + 256*q68/35 + 128*q76/35 + 416*q77/21 + 2944*q78/35 - 1705961725631/22239360000; 
q12 = 3*q43/40 + 11*q57/20 - 13*q68 - 9*q76 - 187*q77/4 - 182*q78 + 640245536119/3981312000; 
q13 = -q43/10 + 12*q76 + 55*q77 + 156*q78 - 280274234143/2322432000; 
q14 = 9*q43/100 - 11*q57/10 + 117*q68/5 - 54*q76/5 - 77*q77/2 - 117*q78/5 - 351546625303/23224320000; 
q15 = -3*q43/70 + 11*q57/7 - 208*q68/7 + 36*q76/7 + 55*q77/7 - 572*q78/7 + 719861687389/6967296000; 
q16 = q43/120 - 11*q57/12 + 13*q68 - q76 + 55*q77/12 + 52*q78 - 1537406025287/27869184000; 
q17= q57/5 - 2*q77 - 28695178529/12773376000; 
q18 = -q68 - 5*q78 + 26295020909/4528742400; 

q21 = 16*q43/105 + 32*q57/21 - 256*q68/7 - 512*q76/35 - 1696*q77/21 - 2560*q78/7 + 219374402018797/653837184000; 
q22 = -3*q43/8 - 11*q57/4 + 65*q68 + 36*q76 + 759*q77/4 + 780*q78 - 111120681599/159252480; 
q23 = q43/2 - 48*q76 - 220*q77 - 624*q78 + 673745059193/1393459200; 
q24 = -9*q43/20 + 11*q57/2 - 117*q68 + 216*q76/5 + 297*q77/2 + 9347052573/57344000; 
q25 = 3*q43/14 - 55*q57/7 + 1040*q68/7 - 144*q76/7 - 165*q77/7 + 3120*q78/7 - 5290669972843/9754214400; 
q26 = -q43/24 + 55*q57/12 - 65*q68 + 4*q76 - 275*q77/12 - 260*q78 + 4613683073401/16721510400; 
q27 = -q57 + 9*q77 + 2866528123/283852800; 
q28 = 5*q68 + 24*q78 - 504910982137/18114969600; 

q31 = -32*q43/105 - 64*q57/21 + 512*q68/7 + 128*q76/7 + 320*q77/3 + 3968*q78/7 - 176735498676397/326918592000; 
q32 = 3*q43/4 + 11*q57/2 - 130*q68 - 45*q76 - 495*q77/2 - 1170*q78 + 1008794747477/928972800; 
q33 = -q43 + 60*q76 + 275*q77 + 780*q78 - 210460787953/348364800; 
q34= 9*q43/10 - 11*q57 + 234*q68 - 54*q76 - 165*q77 + 351*q78 - 10645374221/18144000; 
q35 = -3*q43/7 + 110*q57/7 - 2080*q68/7 + 180*q76/7 - 7020*q78/7 + 1889330085691/1625702400; 
q36 = q43/12 - 55*q57/6 + 130*q68 - 5*q76 + 275*q77/6 + 520*q78 - 659404244953/1194393600; 
q37= 2*q57 - 15*q77 - 42917271247/2554675200; 
q38 = -10*q68 - 45*q78 + 35062684721/670924800; 

q41 = 32*q43/105 + 64*q57/21 - 512*q68/7 - 320*q77/21 - 2048*q78/7 + 35154980197199/108972864000; 
q42 = -3*q43/4 - 11*q57/2 + 130*q68 + 55*q77/2 + 520*q78 - 1596623191783/2786918400; 
q44 = -9*q43/10 + 11*q57 - 234*q68 - 55*q77 - 936*q78 + 74286477509/72576000; 
q45 = 3*q43/7 - 110*q57/7 + 2080*q68/7 + 550*q77/7 + 8320*q78/7 -6293599610173/4877107200;
q46 = -q43/12 + 55*q57/6 - 130*q68 - 275*q77/6 - 520*q78 + 1539621017597/2786918400; 
q47 = -2*q57 + 10*q77 + 28486848373/2554675200; 
q48= 10*q68 + 40*q78 - 120157991813/2587852800; 

q51 = -16*q43/105 - 32*q57/21 + 256*q68/7 - 128*q76/7 - 1760*q77/21 - 128*q78 + 3377574570073/59439744000; 
q52 = 3*q43/8 + 11*q57/4 - 65*q68 + 45*q76 + 825*q77/4 + 390*q78 - 180492528029/796262400; 
q53 = -q43/2 - 60*q76 - 275*q77 - 780*q78 + 840632851381/1393459200; 
q54 = 9*q43/20 - 11*q57/2 + 117*q68 + 54*q76 + 495*q77/2 + 1053*q78 - 54438580573/57344000; 
q55 = -3*q43/14 + 55*q57/7 - 1040*q68/7 - 180*q76/7 - 825*q77/7 - 780*q78 + 7548133388623/9754214400; 
q56 = q43/24 - 55*q57/12 + 65*q68 + 5*q76 + 275*q77/12 + 260*q78 - 4603117837681/16721510400; 
q58 = -5*q68 - 15*q78 + 62906221529/3622993920; 

q61= 16*q43/525 + 32*q57/105 - 256*q68/35 + 512*q76/35 + 1504*q77/21 + 6656*q78/35 - 35774601431711/251475840000; 
q62 = -3*q43/40 - 11*q57/20 + 13*q68 - 36*q76 - 693*q77/4 - 468*q78 + 3281476220509/9289728000; 
q63 = q43/10 + 48*q76 + 220*q77 + 624*q78 - 3362460211381/6967296000; 
q64 = -9*q43/100 + 11*q57/10 - 117*q68/5 - 216*q76/5 - 363*q77/2 - 2808*q78/5 + 1499591489329/3317760000; 
q65 = 3*q43/70 - 11*q57/7 + 208*q68/7 + 144*q76/7 + 495*q77/7 + 1872*q78/7 - 3776103361741/16257024000; 
q66 = -q43/120 + 11*q57/12 - 13*q68 - 4*q76 - 55*q77/12 - 52*q78 + 4529800346461/83607552000; 
q67 = -q57/5 - 3*q77 - 7262961859/3193344000; 

q71 = -128*q76/35 - 128*q77/7 - 384*q78/7 + 1385431/31752; 
q72 = 9*q76 + 44*q77 + 130*q78 - 9931945/96768; 
q73 = -12*q76 - 55*q77 - 156*q78 + 8756345/72576; 
q74 = 54*q76/5 + 44*q77 + 117*q78 - 5636441/64512; 
q75 = -36*q76/7 - 110*q77/7 - 260*q78/7 + 87362549/3386880;

% P+
pp1 = 5257/17280; 
pp2 = 22081/15120; 
pp3 = 54851/120960; 
pp4 = 103/70; 
pp5 = 89437/120960; 
pp6 = 16367/15120;
pp7 = 23917/24192; 
 
% P-
pm1 = 2295973/24324300; 
pm2 = 54878669/58060800; 
pm3 = 23731381/29030400; 
pm4 = 25911889/19353600; 
pm5 = 381587/580608; 
pm6 = 41990357/34836480; 
pm7 = 99185501/106444800; 
pm8 = 762116249/754790400; 

% Interior stencil
s1 =     5/7168;
s2 =   -49/5120;
s3 =   245/3072;
s4 = -1225/1024;
s5 =  1225/1024;
s6 =  -245/3072;
s7 =    49/5120;
s8 =    -5/7168; 

% Q+ top-left corner
QpL = [
      q11 q12 q13 q14 q15 q16 q17 q18 0  0  0 ;
      q21 q22 q23 q24 q25 q26 q27 q28 0  0  0 ;
      q31 q32 q33 q34 q35 q36 q37 q38 0  0  0 ;
      q41 q42 q43 q44 q45 q46 q47 q48 0  0  0 ;
      q51 q52 q53 q54 q55 q56 q57 q58 s8 0  0 ;
      q61 q62 q63 q64 q65 q66 q67 q68 s7 s8 0 ;
      q71 q72 q73 q74 q75 q76 q77 q78 s6 s7 s8;
      ];

% Q- top-left corner
QmL = -[
      q11 q21 q31 q41 q51 q61 q71 0  0  0  0 ;
      q12 q22 q32 q42 q52 q62 q72 0  0  0  0 ;
      q13 q23 q33 q43 q53 q63 q73 0  0  0  0 ;
      q14 q24 q34 q44 q54 q64 q74 0  0  0  0 ;
      q15 q25 q35 q45 q55 q65 q75 s1 0  0  0 ;
      q16 q26 q36 q46 q56 q66 q76 s2 s1 0  0 ;
      q17 q27 q37 q47 q57 q67 q77 s3 s2 s1 0 ;
      q18 q28 q38 q48 q58 q68 q78 s4 s3 s2 s1;
      ];
QmL(1,1) = QmL(1,1) -1;


% Construct (n+2 x n+1) matrix Qp with interior stencil
w = 8; 
s = rot90(vander(1:w))\((0:(w-1)).*(w/2-1/2+1).^([0 0:w-2]))';  
Qp = spdiags(repmat(-s(end:-1:1)',[n+2 1]), -(w/2-1):w/2, n+2, n+2); 
Qp(end,:) = [];
% Add SBP boundary closures
Qp(1:7,1:11) = QpL;
Qp(end-6:end,end-10:end) = -fliplr(flipud(QpL));
% Repeat for Q-
Qm = spdiags(repmat(s(:)',[n+2 1]), -(w/2-1)-1:w/2-1, n+2, n+2);
Qm(:,end) = [];
Qm(1:8,1:11) = QmL;
Qm(end-7:end,end-10:end) = -fliplr(flipud(QmL));

% P+ and P+^-1
Pp  =   h*spdiags(    [pp1 pp2 pp3 pp4 pp5 pp6 pp7 ones(1,n-13) pp7 pp6 pp5 pp4 pp3 pp2 pp1]',0,n+1,n+1);
Ppi = 1/h*spdiags( 1./[pp1 pp2 pp3 pp4 pp5 pp6 pp7 ones(1,n-13) pp7 pp6 pp5 pp4 pp3 pp2 pp1]',0,n+1,n+1);

% P- and P-^-1
Pm  =   h*spdiags(   [pm1 pm2 pm3 pm4 pm5 pm6 pm7 pm8 ones(1,n-14) pm8 pm7 pm6 pm5 pm4 pm3 pm2 pm1]',0,n+2,n+2);
Pmi = 1/h*spdiags(1./[pm1 pm2 pm3 pm4 pm5 pm6 pm7 pm8 ones(1,n-14) pm8 pm7 pm6 pm5 pm4 pm3 pm2 pm1]',0,n+2,n+2);

% D+ and D-
Dp = Ppi*Qp;
Dm = Pmi*Qm;

% nodal and cell-centered grids
xp = h*[0:n]';
xm = h*[0 1/2+0:n n]';  

% Test operators
test = false;
if test
  for j=0:4
    disp([ 'Dp, j = ' num2str(j) ' Error max = ' ...
    num2str(max(abs(Qp*xm.^j-j*Pp*xp.^max([j-1,0]))))]);
    disp([ 'Dm, j = ' num2str(j) ' Error max = '...
    num2str(max(abs(Qm*xp.^j-j*Pm*xm.^max([j-1,0]))))]);
  end   
    
  disp('Leading Error Term');
  disp(max([abs(Pp\Qp*y.^j-j*x.^max([j-1,0]));...
            abs(Pm\Qm*x.^j-j*y.^max([j-1,0]))])) 
  
  
  % Minimize spectral radius
  zp = spalloc(n+1,1,0);
  zm = spalloc(n+2,1,0);
  A = [zp*zp', Dp;
           Dm, zm*zm'];

        
  lambda = eig(full(h*A));
  disp('Spectral radius');
  spectral_radius = max(abs(lambda));
  disp([spectral_radius]);
end
       
